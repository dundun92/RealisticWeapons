PART
{
	name = bdRadome70
	module = Part
	author = BahamutoD
	rescaleFactor = 1
	node_stack_bottom01 = 0.0, -0.9382, 0.0, 0.0, -1.0, 0.0, 1
	//node_attach = 0, 0, -0.313, 0.0, 0.0, 1.0
	TechRequired = precisionEngineering
	entryCost = 6200
	cost = 320
	category = none
	subcategory = 0
	title = AN/APG-70 F-15E/C MSIP Radome
	manufacturer = KWS
	description = A forward facing, aerodynamically housed radar. It can scan and lock targets within a 120 degree field of view. It is optimized for air-to-air combat, but can also lock surface targets reasonably well.
	attachRules = 1,0,1,1,0
	stackSymmetry = 2
	mass = 0.4
	dragModelType = default
	maximum_drag = 0.1
	minimum_drag = 0.1
	angularDrag = .25
	crashTolerance = 40
	maxTemp = 2000
	fuelCrossFeed = True
	bulkheadProfiles = size1
	thermalMassModifier = 6.0
	emissiveConstant = 0.95
	MODEL
	{
		model = BDArmory/Parts/radome125/radome1
	}


MODULE
{
      name = ModuleRadar

          // -- Section: General Configuration --
          radarName = AN/APG-70 Radome		// if left empty part.title is used, but advised to set this to a nice printable text
          rwrThreatType = 1				// IMPORTANT, please set correctly:
                                  // 0 = SAM site radar
                                  // 1 = Fighter radar (airborne)
                                  // 2 = AWACS radar (airborne)
                                  // 3, 4 = ACTIVE MISSILE (DO NOT USE UNLESS YOU KNOW WHAT YOU'RE DOING!
                                  // 5 = Detection radar (ground/ship based)
                                  // 6 = SONAR (ship/submarine based)
          rotationTransformName = scanRotation
  	      //turretID = 0					// if needed
          resourceDrain = 1.2				// change to higher values for more capable radars, e.g AESA

          // -- Section: Capabilities --
          omnidirectional = false				// false: boresight scan radar
          directionalFieldOfView = 120			// for omni and boresight
          boresightFOV = 20				// for boresight only
          scanRotationSpeed = 70				// degress per second
          //lockRotationSpeed = 120				// only relevant if canLock
          lockRotationAngle = 4
          showDirectionWhileScan = true			// can show target direction on radar screen. False: radar echos displayed as block only (no direction)
          multiLockFOV = 60				// only relevant if canLock
          //lockAttemptFOV = 2				// only relevant if canLock
          maxLocks = 6					//how many targets can be locked/tracked simultaneously. only relevant if canLock

          canScan = true					// scanning/detecting targets (volume search)
          canLock = true					// locking/tracking targets (fire control)
          canTrackWhileScan = true			// continue scanning while tracking a locked target
          canRecieveRadarData = true			// can work as passive data receiver (NOTE THE SPELLING! [SIC])

          minSignalThreshold = 80				// DEPRECATED, NO LONGER USED! use detection float curve!
          minLockedSignalThreshold = 100			// DEPRECATED, NO LONGER USED! use locktrack float curve!

        radarGroundClutterFactor = 0.5			// how much is the radar efficiency reduced to by ground clutter/look-down?
                                // 0.0 = reduced to 0% (=IMPOSSIBLE to detect ground targets)
                                // 1.0 = fully efficient (no difference between air & ground targets)
                                // default if unset: 0.25
                                // Ground targets, especially ships, already have a massively larger RCS than fighters, hence
                                // any ground clutter factor >0.25 is to be considered very good, making an efficient surface/horizon search radar.
                                // values >1.0 are possible, meaning the radar is MORE efficient during look down than vs air targets.

          radarDetectionCurve
          {
            // floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
            // this defines both min/max range of the radar, and sensitivity/efficiency
            // it is recommended to define an "assured detection range", at which all craft are detected regardless
            //     of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
            //        key = distance	rcs
                      key = 0.0	0
                      key = 5	0	//between 0 and 5 km the min cross section is 0, thus assured detection of everything
                      key = 10	1   //
                      key = 20 2.5	//
                      key = 35 4.5	//maxrange of 35km
                      key = 55	7   //
                      key = 80	10.5   // 
                      key = 110	14.5   //
                      key = 145	19.5   //
                      key = 185	25   // 
                      key = 230	30   //
                      key = 280   	37.5   //     
   }

          radarLockTrackCurve
          {
              // same as detectionCurve, just for locking/tracking purpose
              // ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
              //   ECM-jammers & chaff completely ineffective!!
              //      key = distance	rcs
                      key = 0.0	0
                      key = 5	0.5	//between 0 and 5 km the min cross section is 0, thus assured detection of everything
                      key = 10	         2.5   //
                      key = 20             3.5	//
                      key = 35                  6	//maxrange of 35km
                      key = 55	9.5   //
                      key = 80	14   // 
                      key = 110	19.5   //
                      key = 145	26   //
                      key = 185	33   // 
                      key = 230	41   //
                      key = 280   	50   //      
  }
}


}
